#include <iostream>
using namespace std;

class Node {
public:
    int data;
    Node* next;

    Node(int data) {
        this->data = data;
        this->next = nullptr;
    }
};

void insertAtBeginning(Node*& head, int data) {
    Node* newNode = new Node(data);
    newNode->next = head;
    head = newNode;
}

void insertAfter(Node* head, int target, int data) {
    Node* current = head;
    while (current != nullptr && current->data != target) {
        current = current->next;
    }

    if (current != nullptr) {
        Node* newNode = new Node(data);
        newNode->next = current->next;
        current->next = newNode;
        cout << "Inserted " << data << " after " << target << "." << endl;
    } else {
        cout << "Element " << target << " not found in the list." << endl;
    }
}

void printList(Node* head) {
    Node* temp = head;
    while (temp != nullptr) {
        cout << temp->data << " -> ";
        temp = temp->next;
    }
    cout << "NULL" << endl;
}

void createLinkedList(Node*& head, int n) {
    cout << "Enter " << n << " elements for the linked list:" << endl;
    for (int i = 0; i < n; ++i) {
        int data;
        cin >> data;
        insertAtBeginning(head, data);
    }
}

int main() {
    Node* head = nullptr; 
    int n;
    cout << "Enter the number of elements in the linked list: ";
    cin >> n;

    createLinkedList(head,n);
    
    cout << "Initial linked list:" << endl;
    printList(head);

    
    int target, newElement;
    cout << "Enter the element after which you want to insert a new element: ";
    cin >> target;
    cout << "Enter the new element to insert after " << target << ": ";
    cin >> newElement;

    insertAfter(head, target, newElement);

    cout << "Updated linked list:" << endl;
    printList(head);

    return 0;
}
